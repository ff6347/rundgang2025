---
import { getCollection } from 'astro:content';
import { filterProjectRowsExcludingUsername } from '../lib/filters.ts';
import { filterAuthorsExcludingUsername } from '../lib/filters.ts';

const authorsRaw = await getCollection('authors');

const authors = filterAuthorsExcludingUsername(authorsRaw, 'hbk-bs-bot');
const projectsRaw = await getCollection('projects');
const briefings = await getCollection('briefings');
const projects = filterProjectRowsExcludingUsername(projectsRaw, 'hbk-bs-bot');
const authorMap = Object.fromEntries(authors.map((a) => [a.id, a]));

const briefingMap = Object.fromEntries(briefings.map((b) => [b.data.id, b]));
---

<main class="m-auto max-w-screen-sm">
	<section id="hero">
		<h1>Rundgang 2025</h1>
		<p>Projects from the seminar</p>
		<h2>Fundamentals of Digital Communication</h2>
		<p>in winter semester 2024/2025 and summer semester 2025</p>
		<p class="authors">
			{
				authors
					.map((author) => (
						<span class="author">
							<a
								href={`https://github.com/${author.data.github_username}`}
								target="_blank"
								rel="noopener noreferrer"
							>
								@{author.data.github_username}
							</a>
						</span>
					))
					.reduce((acc, el, i, arr) => {
						if (i === 0) return [el];
						if (i === arr.length - 1) return [...acc, ' and ', el];
						return [...acc, ', ', el];
					}, [])
			}
		</p>
	</section>
	<section id="ask">
		<p>
			Hey I am your friendly guide for this seminar. I might have some answers
			for you!
		</p>
		<form>
			<label for="question">AMA</label>
			<input
				type="text"
				id="question"
				name="question"
				placeholder="Ask me anything"
			/>
			<button type="submit">Ask me anything</button>
		</form>
	</section>

	<section id="projects">
		<h2>Projects</h2>
		<div id="project-list">
			{
				projects.map((project) => {
					const briefing = briefingMap[project.data.id];
					// console.log(briefing ? Object.keys(briefing) : 'no briefing');
					return (
						<>
							<div class="project-item">
								<h3 id={project.id}>{project.id}</h3>
								{briefing && briefing.rendered && (
									<div set:html={briefing.rendered.html} />
								)}

								<ul>
									{project.data.rows.map((row) => {
										const author = authorMap[row.author.id];
										return (
											<li>
												<a
													href={row.project_url}
													target="_blank"
													rel="noopener noreferrer"
												>
													{row.project_url
														? row.project_url.replace('https://', '')
														: 'No project URL'}
												</a>
												{' by '}
												{author ? (
													<a
														href={`https://github.com/${author.data.github_username}`}
														target="_blank"
														rel="noopener noreferrer"
													>
														@{author.data.github_username}
													</a>
												) : (
													'Unknown author'
												)}
											</li>
										);
									})}
								</ul>
							</div>
						</>
					);
				})
			}
		</div>
	</section>
</main>

<script>
	// Shuffle and re-append .author elements in the DOM
	window.addEventListener('DOMContentLoaded', () => {
		const parent = document.querySelector('.authors');
		if (!parent) return;
		const authors = Array.from(parent.querySelectorAll('.author'));
		if (authors.length < 2) return;

		// Shuffle authors
		const shuffled = authors.sort(() => Math.random() - 0.5);

		// Remove all children (including text nodes)
		while (parent.firstChild) parent.removeChild(parent.firstChild);

		// Rebuild with correct separators
		shuffled.forEach((author, i) => {
			console.log(author);

			const a = author.querySelector('a');
			if (a) {
				a.textContent = a.textContent?.trim() ?? '';
			}
			parent.appendChild(author);
			if (i < shuffled.length - 2) {
				const span = document.createElement('span');
				span.textContent = ', ';
				parent.appendChild(span);
			} else if (i === shuffled.length - 2) {
				const span = document.createElement('span');
				span.textContent = ' and ';
				parent.appendChild(span);
			}
		});
	});
</script>
